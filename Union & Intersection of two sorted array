//---------- Using C


      #include<stdio.h>
      #include<stdlib.h>
      void heapify(int arr[],int n, int i){
          int largest=i , l=2*i+1 , r=2*i+2;
          if (l<n && arr[l]>arr[largest]) largest=l;
          if (r<n && arr[r]>arr[largest]) largest=r;
          if (largest!=i) {
          int temp=arr[i];
              arr[i]=arr[largest];
              arr[largest]=temp;
              heapify(arr,n,largest);
          }
      }
      void heapSort(int arr[],int n){
          for (int i=n/2-1;i>=0;i--) heapify(arr,n,i);
          for (int i=n-1;i>0;i--){
              int temp=arr[0];
              arr[0]=arr[i];
              arr[i]=temp;
              heapify(arr,i,0);
          }
      }
      int IntersectionAndUnion(int tempArr[],int arr1[],int arr2[],int n1,int n2){
          int i=0,j=0,k=0;
          while(i<n1 && j<n2){
              if(arr1[i]>arr2[j])
                  if(arr2[j]!=arr2[j-1]) tempArr[k++]=arr2[j++];
                  else j++;
              else if(arr1[i]<arr2[j])
                  if(arr1[i]!=arr1[i-1]) tempArr[k++]=arr1[i++];
                  else i++;
              else{
                  if(arr1[i]!=arr1[i-1]) printf("%d ",arr1[i]);
                  if(tempArr[k-1]!=arr1[i])
                      tempArr[k++]=arr1[i++];
                  else
                      i++;
                  j++;
              }
          }
          if(i>=n1) while(j<n2)
              if(arr2[j]!=arr2[j-1])
                  tempArr[k++]=arr2[j++];
              else j++;
          else if(j>=n2) while(i<n1)
              if(arr1[i]!=arr1[i-1])
                  tempArr[k++]=arr1[i++];
              else i++;
          return k;
      }
      int main(){
          int n1,n2,i,j;
          scanf("%d %d",&n1,&n2);
          int *arr1=(int *)malloc(n1*sizeof(int));
          int *arr2=(int *)malloc(n2*sizeof(int));
          int *tempArr=(int *)calloc(n1+n2,sizeof(int));
          for(i=0;i<n1;i++) scanf("%d",&arr1[i]);
          for(i=0;i<n2;i++) scanf("%d",&arr2[i]);
          heapSort(arr1,n1);
          heapSort(arr2,n2);
          printf("Intersection :");
          j=IntersectionAndUnion(tempArr,arr1,arr2,n1,n2);
          printf("\nUnion : ");
          for(i=0;i<j;i++)printf("%d ",tempArr[i]);
      }
